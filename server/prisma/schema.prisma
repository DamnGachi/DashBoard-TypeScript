// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              String        @id @default(uuid())
  username        String
  email           String        @unique
  avatar          String
  hashed_password String
  role_id         String
  registered_at   DateTime      @default(now())
  changed_at      DateTime      @updatedAt
  is_active       Boolean       @default(true)
  is_verified     Boolean       @default(false)
  author          Author[]
  owner           ChatRoom[]
  Message         Message[]
  MusicLibary     MusicLibary[]
  ChatMember      ChatMember[]
}

model Author {
  id          String  @id @default(uuid())
  is_verified Boolean @default(false)
  author      User    @relation(fields: [authorId], references: [id])
  authorId    String
}

model MusicLibary {
  id       String @id @default(uuid())
  song     String
  libaryId String
  author   User   @relation(fields: [authorId], references: [id])
  authorId String
}

model GoogleUser {
  id       String @id @default(uuid())
  username String
  email    String
  googleId String
}

model ChatRoom {
  id          String       @id @default(uuid())
  name        String
  link        String?      @unique
  avatar      String?
  description String?
  pinMessage  String?
  Owner       User?        @relation(fields: [userId], references: [id])
  userId      String?
  Message     Message[]
  ChatMember  ChatMember[]
}

model Message {
  id         String    @id @default(uuid())
  text       String
  entity     String
  send_at    DateTime  @default(now())
  changed_at DateTime  @updatedAt
  User       User?     @relation(fields: [userId], references: [id])
  Chat       ChatRoom? @relation(fields: [chatRoomId], references: [id])
  chatRoomId String
  userId     String
}

model ChatMember {
  id     String   @id @default(uuid())
  User   User     @relation(fields: [userId], references: [id])
  Chat   ChatRoom @relation(fields: [chatId], references: [id])
  userId String
  chatId String 
}
